///////////////////////////////////////////////////////////////////////
//   File: cevaes.hpp
//
// Author: $author$
//   Date: 11/2/2007
//
//    $Id$
///////////////////////////////////////////////////////////////////////

#ifndef _CEVAES_HPP
#define _CEVAES_HPP

#include "evaes.hpp"
#include "cevcipher.hpp"

///////////////////////////////////////////////////////////////////////
//  Class: CEvAES
//
// Author: $author$
//   Date: 11/2/2007
///////////////////////////////////////////////////////////////////////
class CEvAES
: virtual public EvAES,
  public CEvCipher
{
public:
    typedef EvAES CImplements;
    typedef CEvCipher CExtends;
    typedef CEvAES CDerives;

    ///////////////////////////////////////////////////////////////////////
    // Constructor: CEvAES
    //
    //       Author: $author$
    //         Date: 11/2/2007
    ///////////////////////////////////////////////////////////////////////
    CEvAES() 
    {
    }
    ///////////////////////////////////////////////////////////////////////
    // Destructor: ~CEvAES
    //
    //      Author: $author$
    //        Date: 11/2/2007
    ///////////////////////////////////////////////////////////////////////
    virtual ~CEvAES()
    {
    }

    ///////////////////////////////////////////////////////////////////////
    // Function: GetBlockSize
    //
    //   Author: $author$
    //     Date: 12/5/2007
    ///////////////////////////////////////////////////////////////////////
    virtual LONG GetBlockSize() const 
    {
        LONG blockSize = EV_BLOCK_SIZE;
        return blockSize;
    }
};

#endif // _CEVAES_HPP
