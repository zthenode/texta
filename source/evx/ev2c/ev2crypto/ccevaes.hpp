///////////////////////////////////////////////////////////////////////
//   File: ccevaes.hpp
//
// Author: $author$
//   Date: 11/4/2007
//
//    $Id$
///////////////////////////////////////////////////////////////////////

#ifndef _CCEVAES_HPP
#define _CCEVAES_HPP

#include <vector>
#include "evaes.hpp"
#include "ccevcipher.hpp"
#include "caes.hxx"

///////////////////////////////////////////////////////////////////////
//  Class: CCEvAES
//
// Author: $author$
//   Date: 11/4/2007
///////////////////////////////////////////////////////////////////////
class CCEvAES
: virtual public EvAES,
  public CCEvCipher
{
public:
    typedef EvAES CImplements;
    typedef CCEvCipher CExtends;
    typedef CCEvAES CDerives;

    CAES m_cipher;

    ///////////////////////////////////////////////////////////////////////
    // Constructor: CCEvAES
    //
    //       Author: $author$
    //         Date: 11/4/2007
    ///////////////////////////////////////////////////////////////////////
    CCEvAES() 
    {
        m_deligate = &m_cipher;
    }
    ///////////////////////////////////////////////////////////////////////
    // Destructor: ~CCEvAES
    //
    //      Author: $author$
    //        Date: 11/4/2007
    ///////////////////////////////////////////////////////////////////////
    virtual ~CCEvAES()
    {
    }

    ///////////////////////////////////////////////////////////////////////
    // Function: GetBlockSize
    //
    //   Author: $author$
    //     Date: 12/5/2007
    ///////////////////////////////////////////////////////////////////////
    virtual LONG GetBlockSize() const 
    {
        LONG blockSize = EV_BLOCK_SIZE;
        return blockSize;
    }
    ///////////////////////////////////////////////////////////////////////
    // Function: DeleteThis
    //
    //   Author: $author$
    //     Date: 2/12/2009
    ///////////////////////////////////////////////////////////////////////
    virtual EvError DeleteThis() 
    {
        EvError error = EV_ERROR_NONE;
        delete this;
        return error;
    }
};

///////////////////////////////////////////////////////////////////////
//  Typedef: CCEvAESs
//
//   Author: $author$
//     Date: 11/4/2007
///////////////////////////////////////////////////////////////////////
typedef ::std::vector<CCEvAES*>
CCEvAESs;

///////////////////////////////////////////////////////////////////////
//  Typedef: CCEvAESsIterator
//
//   Author: $author$
//     Date: 11/4/2007
///////////////////////////////////////////////////////////////////////
typedef CCEvAESs::iterator
CCEvAESsIterator;

///////////////////////////////////////////////////////////////////////
//  Typedef: const_CCEvAESsIterator
//
//   Author: $author$
//     Date: 11/4/2007
///////////////////////////////////////////////////////////////////////
typedef CCEvAESs::const_iterator
const_CCEvAESsIterator;

#endif // _CCEVAES_HPP
