/*
///////////////////////////////////////////////////////////////////////
//   File: everror.h
//
// Author: $author$
//   Date: 4/4/2007
///////////////////////////////////////////////////////////////////////
*/
#ifndef _EVERROR_H
#define _EVERROR_H

/*
///////////////////////////////////////////////////////////////////////
//   Enum:  
//
// Author: $author$
//   Date: 4/4/2007
///////////////////////////////////////////////////////////////////////
*/
enum
{
    EV_FIRST_ERROR = 0,

    EV_ERROR_NONE = EV_FIRST_ERROR,
    EV_ERROR_FAILED,
    EV_ERROR_NOT_DEFINED,
    EV_ERROR_NOT_ALLOWED,
    EV_ERROR_NOT_IMPLEMENTED,
    EV_ERROR_NULL_PARAMETER,
    EV_ERROR_MISSING_PARAMETER,
    EV_ERROR_EXTRA_PARAMETER,
    EV_ERROR_INVALID_PARAMETER,
    EV_ERROR_INVALID_PARAMETER_TYPE,
    EV_ERROR_INVALID_PARAMETER_SIZE,
    EV_ERROR_PARAMETER_SIZE_UNDER,
    EV_ERROR_PARAMETER_SIZE_OVER,
    EV_ERROR_INVALID_RETURN,
    EV_ERROR_INVALID_RETURN_TYPE,
    EV_ERROR_INVALID_RETURN_SIZE,
    EV_ERROR_RETURN_SIZE_UNDER,
    EV_ERROR_RETURN_SIZE_OVER,
    EV_ERROR_INITIALIZE,
    EV_ERROR_FINALIZE,
    EV_ERROR_NOT_INITIALIZED,
    EV_ERROR_ALREADY_INITIALIZED,
    EV_ERROR_STARTUP,
    EV_ERROR_CLEANUP,
    EV_ERROR_SHUTDOWN,
    EV_ERROR_START,
    EV_ERROR_STOP,
    EV_ERROR_FINISH,
    EV_ERROR_NOT_STARTED,
    EV_ERROR_ALREADY_STARTED,
    EV_ERROR_WAIT,
    EV_ERROR_WAIT_ABANDONED,
    EV_ERROR_WAIT_TIMEOUT,
    EV_ERROR_LOCK,
    EV_ERROR_UNLOCK,
    EV_ERROR_NOT_LOCKED,
    EV_ERROR_MALLOC,
    EV_ERROR_FREE,
    EV_ERROR_NEW,
    EV_ERROR_DELETE,
    EV_ERROR_REFERENCE,
    EV_ERROR_REFERENCED,
    EV_ERROR_NOT_REFERENCED,
    EV_ERROR_ALREADY_REFERENCED,
    EV_ERROR_INSTANTIATE,
    EV_ERROR_NOT_INSTANTIATED,
    EV_ERROR_ALREADY_INSTANTIATED,
    EV_ERROR_GET_INSTANCE,
    EV_ERROR_HOLD_INSTANCE,
    EV_ERROR_FREE_INSTANCE,
    EV_ERROR_ATTACH,
    EV_ERROR_DETACH,
    EV_ERROR_NOT_ATTACHED,
    EV_ERROR_ALREADY_ATTACHED,
    EV_ERROR_CREATE,
    EV_ERROR_DESTROY,
    EV_ERROR_NOT_CREATED,
    EV_ERROR_ALREADY_CREATED,
    EV_ERROR_FIND,
    EV_ERROR_FOUND,
    EV_ERROR_NOT_FOUND,
    EV_ERROR_EXIST,
    EV_ERROR_NOT_EXIST,
    EV_ERROR_ALREADY_EXIST,
    EV_ERROR_MEMBER,
    EV_ERROR_NOT_MEMBER,
    EV_ERROR_ALREADY_MEMBER,
    EV_ERROR_OPEN,
    EV_ERROR_CLOSE,
    EV_ERROR_NOT_OPEN,
    EV_ERROR_ALREADY_OPEN,
    EV_ERROR_SET_MODE,
    EV_ERROR_GET_MODE,
    EV_ERROR_SET_HANDLE,
    EV_ERROR_GET_HANDLE,
    EV_ERROR_SET_BUFFER,
    EV_ERROR_GET_BUFFER,
    EV_ERROR_TELL,
    EV_ERROR_SEEK,
    EV_ERROR_FILL,
    EV_ERROR_FLUSH,
    EV_ERROR_CLEAR,
    EV_ERROR_GET,
    EV_ERROR_PUT,
    EV_ERROR_READ,
    EV_ERROR_WRITE,
    EV_ERROR_COPY,
    EV_ERROR_ENDOF,
    EV_ERROR_BEGINOF,
    EV_ERROR_FULL,
    EV_ERROR_EMPTY,
    EV_ERROR_INVALID_OPTION,
    EV_ERROR_INVALID_MODE,
    EV_ERROR_IOCTL,
    EV_ERROR_IOCTL_COMMAND,
    EV_ERROR_IOCTL_PARAMETER,
    EV_ERROR_IOCTL_PARAMETER_SIZE,
    EV_ERROR_IOCTL_RETURN_SIZE,
    EV_ERROR_PRINT_FORMATTED,
    EV_ERROR_VPRINT_FORMATTED,
    EV_ERROR_INVALID_SYNTAX,

    EV_NEXT_ERROR,
    EV_LAST_ERROR = EV_NEXT_ERROR-1
};

typedef int EvError;

#if defined(__cplusplus)
extern "C" {
#endif

#if defined(__cplusplus)
}
#endif

#endif /*// _EVERROR_H */
