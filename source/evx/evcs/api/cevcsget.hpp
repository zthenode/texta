///////////////////////////////////////////////////////////////////////
//   File: cevcsget.hpp
//
// Author: $author$
//   Date: 9/28/2007
//
//    $Id$
///////////////////////////////////////////////////////////////////////

#ifndef _CEVCSGET_HPP
#define _CEVCSGET_HPP

#include "evcsget.hpp"
#include "cevcsaction.hpp"

///////////////////////////////////////////////////////////////////////
//  Class: CEvcsGet
//
// Author: $author$
//   Date: 9/28/2007
///////////////////////////////////////////////////////////////////////
class CEvcsGet
: virtual public EvcsGet,
  public CEvcsAction
{
public:
    typedef EvcsGet CImplements;
    typedef CEvcsAction CExtends;
    typedef CEvcsGet CDerives;

    ///////////////////////////////////////////////////////////////////////
    // Constructor: CEvcsGet
    //
    //       Author: $author$
    //         Date: 9/28/2007
    ///////////////////////////////////////////////////////////////////////
    CEvcsGet() 
    {
    }
    ///////////////////////////////////////////////////////////////////////
    // Destructor: ~CEvcsGet
    //
    //      Author: $author$
    //        Date: 9/28/2007
    ///////////////////////////////////////////////////////////////////////
    virtual ~CEvcsGet()
    {
    }

    ///////////////////////////////////////////////////////////////////////
    // Function: OpenFirst
    //
    //   Author: $author$
    //     Date: 9/28/2007
    ///////////////////////////////////////////////////////////////////////
    virtual EvError OpenFirst
    (EvcsEntry& entry,
     const char* entryPathName,
     bool isRecursive=false) 
    {
        EvError error = EV_ERROR_FAILED;
        return error;
    }
    ///////////////////////////////////////////////////////////////////////
    // Function: OpenNext
    //
    //   Author: $author$
    //     Date: 9/28/2007
    ///////////////////////////////////////////////////////////////////////
    virtual EvError OpenNext
    (EvcsEntry& entry) 
    {
        EvError error = EV_ERROR_FAILED;
        return error;
    }
    ///////////////////////////////////////////////////////////////////////
    // Function: Close
    //
    //   Author: $author$
    //     Date: 9/28/2007
    ///////////////////////////////////////////////////////////////////////
    virtual EvError Close() 
    {
        EvError error = EV_ERROR_FAILED;
        return error;
    }
    ///////////////////////////////////////////////////////////////////////
    // Function: ReadBlock
    //
    //   Author: $author$
    //     Date: 9/28/2007
    ///////////////////////////////////////////////////////////////////////
    virtual LONG ReadBlock
    (EvcsEntry& entry,
     char* chars, ULONG size) 
    {
        LONG count = -EV_ERROR_FAILED;
        return count;
    }
};
#endif // _CEVCSGET_HPP
