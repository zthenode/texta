///////////////////////////////////////////////////////////////////////
//   File: evtime.hpp
//
// Author: $author$
//   Date: 6/14/2007
//
//    $Id$
///////////////////////////////////////////////////////////////////////

#ifndef _EVTIME_HPP
#define _EVTIME_HPP

#include "evtimezone.hpp"

///////////////////////////////////////////////////////////////////////
//  Class: EvTime
//
// Author: $author$
//   Date: 6/14/2007
///////////////////////////////////////////////////////////////////////
class EV_EXPORT_CLASS EvTime
: virtual public EvBase
{
public:
    typedef EvBase CImplements;
    typedef EvTime CDerives;

    ///////////////////////////////////////////////////////////////////////
    // Function: CompareTime
    //
    //   Author: $author$
    //     Date: 6/27/2007
    ///////////////////////////////////////////////////////////////////////
    virtual int CompareTime
    (const EvTime& time,
     bool is12=false,
     bool isPM=false,
     bool isLocal=false,
     const EvTimezone* timezone=0) const = 0;
    ///////////////////////////////////////////////////////////////////////
    // Function: SetTime
    //
    //   Author: $author$
    //     Date: 6/21/2007
    ///////////////////////////////////////////////////////////////////////
    virtual EvError SetTime
    (const EvTime& time,
     bool is12=false,
     bool isPM=false,
     bool isLocal=false,
     const EvTimezone* timezone=0) = 0;

    ///////////////////////////////////////////////////////////////////////
    // Function: SetHour
    //
    //   Author: $author$
    //     Date: 6/14/2007
    ///////////////////////////////////////////////////////////////////////
    virtual INT SetHour
    (UINT time,
     bool is12=false,
     bool isPM=false) = 0;
    ///////////////////////////////////////////////////////////////////////
    // Function: GetHour
    //
    //   Author: $author$
    //     Date: 6/14/2007
    ///////////////////////////////////////////////////////////////////////
    virtual INT GetHour
    (bool& isPM,
     bool is12=false) const = 0;

    ///////////////////////////////////////////////////////////////////////
    // Function: SetMinute
    //
    //   Author: $author$
    //     Date: 6/14/2007
    ///////////////////////////////////////////////////////////////////////
    virtual INT SetMinute
    (UINT time) = 0;
    ///////////////////////////////////////////////////////////////////////
    // Function: GetMinute
    //
    //   Author: $author$
    //     Date: 6/14/2007
    ///////////////////////////////////////////////////////////////////////
    virtual INT GetMinute() const = 0;

    ///////////////////////////////////////////////////////////////////////
    // Function: SetSecond
    //
    //   Author: $author$
    //     Date: 6/14/2007
    ///////////////////////////////////////////////////////////////////////
    virtual INT SetSecond
    (UINT time) = 0;
    ///////////////////////////////////////////////////////////////////////
    // Function: GetSecond
    //
    //   Author: $author$
    //     Date: 6/14/2007
    ///////////////////////////////////////////////////////////////////////
    virtual INT GetSecond() const = 0;

    ///////////////////////////////////////////////////////////////////////
    // Function: SetMillisecond
    //
    //   Author: $author$
    //     Date: 6/14/2007
    ///////////////////////////////////////////////////////////////////////
    virtual INT SetMillisecond
    (UINT time) = 0;
    ///////////////////////////////////////////////////////////////////////
    // Function: GetMillisecond
    //
    //   Author: $author$
    //     Date: 6/14/2007
    ///////////////////////////////////////////////////////////////////////
    virtual INT GetMillisecond() const = 0;

    ///////////////////////////////////////////////////////////////////////
    // Function: CreateInstance
    //
    //   Author: $author$
    //     Date: 5/14/2008
    ///////////////////////////////////////////////////////////////////////
    static EvTime* CreateInstance
    (EvError& error);
    ///////////////////////////////////////////////////////////////////////
    // Function: DestroyInstance
    //
    //   Author: $author$
    //     Date: 5/14/2008
    ///////////////////////////////////////////////////////////////////////
    static EvError DestroyInstance
    (EvTime& instance);
};

#endif // _EVTIME_HPP
