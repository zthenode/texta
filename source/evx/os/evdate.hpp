///////////////////////////////////////////////////////////////////////
//   File: evdate.hpp
//
// Author: $author$
//   Date: 6/14/2007
///////////////////////////////////////////////////////////////////////

#ifndef _EVDATE_HPP
#define _EVDATE_HPP

#include "evbase.hpp"
#include "evtimezone.hpp"

#if defined(WIN32) 
// Windows
#else // defined(WIN32) 
// Unix
#endif // defined(WIN32)

///////////////////////////////////////////////////////////////////////
//  Class: EvDate
//
// Author: $author$
//   Date: 6/14/2007
///////////////////////////////////////////////////////////////////////
class EV_EXPORT_CLASS EvDate
: virtual public EvBase
{
public:
    typedef EvBase CImplements;
    typedef EvDate CDerives;

    ///////////////////////////////////////////////////////////////////////
    // Function: CompareDate
    //
    //   Author: $author$
    //     Date: 6/27/2007
    ///////////////////////////////////////////////////////////////////////
    virtual int CompareDate
    (const EvDate& date,
     bool isLocal=false,
     const EvTimezone* timezone=0) const = 0;
    ///////////////////////////////////////////////////////////////////////
    // Function: SetDate
    //
    //   Author: $author$
    //     Date: 6/21/2007
    ///////////////////////////////////////////////////////////////////////
    virtual EvError SetDate
    (const EvDate& date,
     bool isLocal=false,
     const EvTimezone* timezone=0) = 0;
    ///////////////////////////////////////////////////////////////////////
    // Function: SetYear
    //
    //   Author: $author$
    //     Date: 6/14/2007
    ///////////////////////////////////////////////////////////////////////
    virtual INT SetYear
    (UINT date) = 0;
    ///////////////////////////////////////////////////////////////////////
    // Function: GetYear
    //
    //   Author: $author$
    //     Date: 6/14/2007
    ///////////////////////////////////////////////////////////////////////
    virtual INT GetYear() const = 0;
    ///////////////////////////////////////////////////////////////////////
    // Function: SetMonth
    //
    //   Author: $author$
    //     Date: 6/14/2007
    ///////////////////////////////////////////////////////////////////////
    virtual INT SetMonth
    (UINT date) = 0;
    ///////////////////////////////////////////////////////////////////////
    // Function: GetMonth
    //
    //   Author: $author$
    //     Date: 6/14/2007
    ///////////////////////////////////////////////////////////////////////
    virtual INT GetMonth() const = 0;
    ///////////////////////////////////////////////////////////////////////
    // Function: SetDay
    //
    //   Author: $author$
    //     Date: 6/14/2007
    ///////////////////////////////////////////////////////////////////////
    virtual INT SetDay
    (UINT date) = 0;
    ///////////////////////////////////////////////////////////////////////
    // Function: GetDay
    //
    //   Author: $author$
    //     Date: 6/14/2007
    ///////////////////////////////////////////////////////////////////////
    virtual INT GetDay() const = 0;

    ///////////////////////////////////////////////////////////////////////
    // Function: CreateInstance
    //
    //   Author: $author$
    //     Date: 5/14/2008
    ///////////////////////////////////////////////////////////////////////
    static EvDate* CreateInstance
    (EvError& error);
    ///////////////////////////////////////////////////////////////////////
    // Function: DestroyInstance
    //
    //   Author: $author$
    //     Date: 5/14/2008
    ///////////////////////////////////////////////////////////////////////
    static EvError DestroyInstance
    (EvDate& instance);
};
#endif // _EVDATE_HPP
